<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>multiTeQ.inf2050.minischeme</groupId>
    <artifactId>web</artifactId>
    <version>0.1-SNAPSHOT</version>

    <name>Projet-INF2050</name>

    <!-- Outil de build pour le démarrage des projets -->    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
    </parent>
    
    <dependencies>
        <!-- web development -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- language extensions -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.6</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.pivovarit</groupId>
            <artifactId>throwing-function</artifactId>
            <version>1.5.0</version>
        </dependency>

        <!-- development tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <!--
        Dépendances directes du projet, incluant celles pour la compilation et
        l'exécution des tests.
        -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.0</version>
        </dependency>

        <!-- ANTLR -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4</artifactId>
            <version>4.7</version>
        </dependency>

	<!-- API JUnit pour écrire des test unitaires-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.3.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Fournit l'implémentation JUnit Jupiter TestEngine -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.3.2</version>
            <scope>test</scope>
        </dependency>

        <!--Dépendance commons-math3 - Le code applicatif l'utilise pour
        arrondir les doubles-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>
    </dependencies>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <finalName>minischeme</finalName>
        <plugins>
            <!-- compilation du compilateur -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.7</version>
                <configuration>
                    <sourceDirectory>${basedir}/src/main/antlr/minischeme/parser</sourceDirectory>
                    <arguments>
                        <argument>-visitor</argument>
                        <argument>-no-listener</argument>
                    </arguments>
                </configuration>
                <executions>
                    <execution>
                        <id>antlr</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin qui fournit plusieurs goals pour les applications 
	    Spring Boot (repackage, run, start, stop et build-info) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>minischeme.web.Application</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            Redéfinition du plugin de compilation afin de changer la version et
            indiquer que les sources sont en Java 11.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>

            <!--
            Redéfinition du plugin d'exécution des tests afin d'utiliser une version
            compatible avec junit 5.
            -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
            </plugin>

            <!--
            Ajout du plugin permettant la génération de la javadoc. Peut être
            lancé avec la commande `mvn javadoc:javadoc`.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>

            <!--
      	    Redéfinition du plugin de génération du jar afin d'ajouter une entrée
            au manifeste du jar.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>minischeme.web.Application</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!--
            Ajout du plugin Shade permettant la création d'un über-jar.
            Crée un binding entre la phase 'package' et le goal 'shade'.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            Ajout du plugin Jacoco permettant la création d'un rapport
            qui contient l'analyse de la couverture des tests unitaires
            JUnit. Plugin lié à la phase de tests de Maven.
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- attached to Maven test phase -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            Redéfinition du plugin site 3.3 pour la création des rapports
            des analyses statiques.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>

            <!--
            Redéfinition du plugin projet-info-reports pour la création des rapports
            d'information (analyse statique, couverture de tests) du projet.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!--
            Plugin utilisé pour permettre aux rapports produits de référencer des lignes du code source.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>

            <!--
            Ajout du plugin Spotbugs permettant la création d'un
            analyse statique du code java du projet.
            -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.0.0</version>
            </plugin>

            <!--
            Ajout du plugin PMD permettant la création d'un
            analyse statique du code java du projet.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.13.0</version>
            </plugin>

            <!--
            Ajout du plugin Checkstyle permettant la création d'un
            analyse statique du code java du projet.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
            </plugin>

            <!--
            Ajout du plugin Jacoco permettant la création d'un
            analyse de la couverture ds tests JUnit du projet.
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.3</version>
            </plugin>
        </plugins>
    </reporting>
</project>
